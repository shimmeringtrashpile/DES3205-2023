/* 
  Module 6! Combining Selectors
  We're going to talk about "grouping selectors" and "nesting selectors."
  
  I'm going to start with some CSS that might be new to you.
  One of the things you will do a LOT is look at CSS and HTML that has already been written. 
  So let's start doing that now.
  Go ahead and look at your html file and then run it in your browser so you can see the output.
*/


/* Below is a p element selector that sets all of our p element text size to 18px. 
   It is common to see element selectors like this one at the top of a CSS file.
   Element selectors are commonly placed at the top because they are the least specific rules.
   Becuase they are the least specific rule they will likely be applied to a lot of things on your page.
   You might see element selectors that impact: all p elements, all h1, h2 and h3 elements, all div elements, etc.
*/

p {
    font-size: 18px
}


/* These are h1 and h2 element selectors setting the text size. */

h1 {
    font-size: 32px
}

h2 {
    font-size: 28px
}


/* These selectors below start with a #. Do you remember what type of selectors these are? 
   Take a look at your html file. What html elements are using these selectors?

   GROUPING SELECTORS
   You will also notice this style starts with two selectors separated by a COMMA.
   This is called "grouping selectors" or "grouped selectors."
   Comma-separating selectors in this way works like an "or" meaning this style will be applied to #ingredients OR #pizza-party.
   If both exist on the page, they will BOTH be styled.
*/

#intro,
#pizza-party {
    color: powderblue;
    font-size: 20px;
    text-align: center;
    background-color: magenta;
    line-height: 64px
}


/* These are our class selectors for Imani and Carmen's sentences. */

.imani {
    color: blueviolet;
}

.carmen {
    color: orangered;
}


/* We have a DIV element in our HTML with this class.
   Check out what it is doing to our background.
*/

.recipe-container {
    width: 80%;
    padding: 18px;
    background-color: rgb(16, 16, 16);
}


/* Recipe-container is a dark background, so we need to style our .recipe-title with light-colored text. 
   Becuase it is our title, we're going to make it pretty big.
*/

.recipe-title {
    color: white;
    font-size: 28px;
}


/* Recipe-container is a dark background so we need to style our subtitle and description text to a light color.
   But we want this copy to be a bit more subtle than our .recipe-title, so we'll make it light gray.
   You will notice this style is two selectors separated by a COMMA. Comma-separated selectors work like an "or."
   Reminder, this is called "grouping selectors."
   This style will be applied to my class .recipe-subtitle OR class .recipe-description. 
   If both exist on the page, they will BOTH be styled.
*/

.recipe-subtitle,
.recipe-description {
    color: rgb(190, 190, 190);
}


/* This style will be applied to our recipe-subtitle class. */

.recipe-subtitle {
    font-size: 24px
}


/* You will notice this style is two selectors separated by a COMMA. Comma-separated selectors work like an "or."
   This style will be applied to my class .ingredients OR my class .preparation.
   Reminder, this is called "grouping selectors."
   If both exist on the page, they will BOTH be styled.
*/

.ingredients,
.preparation {
    color: white;
    text-transform: uppercase;
}


/* You will notice this style is two selectors separated by a COMMA. Comma-separated selectors work like an "or."
   White color will be applied to ordered lists (ol), also known as numbered lists OR unordered lists (ul) which you might think of as "bulleted lists."
   Reminder, this is called "grouping selectors."
   If both exist on the page, they will BOTH be styled.
   */

ul,
ol {
    color: white;
}


/* NESTING SELECTORS
When two selectors are separated by a SPACE they are called "nesting selectors" or "nested selectors."
You can think of this nesting like russian nesting dolls. 
Reference: https://www.macalester.edu/russian/about/resources/miscellany/matryoshka/
I have an easier time thinking about how nested selectors work when I read them from right-to-left like this.
"This style will be applied to the li:last-child element nested inside my .ol (ordered list) class." 
Note: You can add :last-child to li elements to pick the very last li item in lists.

This nesting created by the space between ol and li says "only look at the li elements nested in our ol and that's it!" 
We have an li:last-child up above in our UNORDERED list (ul) but it will NOT be changed to our orange becuase it isn't in our nest.
*/

ol li:last-child {
    color: orange;
}


/* You don't have any tasks in this module. 
   But please mess around with the html and css code here and experiment with nesting and grouping!